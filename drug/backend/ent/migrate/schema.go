// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DoctorsColumns holds the columns for the "doctors" table.
	DoctorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "doctor_email", Type: field.TypeString},
		{Name: "doctor_password", Type: field.TypeString},
		{Name: "doctor_name", Type: field.TypeString},
		{Name: "doctor_tel", Type: field.TypeString},
	}
	// DoctorsTable holds the schema information for the "doctors" table.
	DoctorsTable = &schema.Table{
		Name:        "doctors",
		Columns:     DoctorsColumns,
		PrimaryKey:  []*schema.Column{DoctorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DrugAllergiesColumns holds the columns for the "drug_allergies" table.
	DrugAllergiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "doctor_id", Type: field.TypeInt, Nullable: true},
		{Name: "manner_id", Type: field.TypeInt, Nullable: true},
		{Name: "medicine_id", Type: field.TypeInt, Nullable: true},
		{Name: "patient_id", Type: field.TypeInt, Nullable: true},
	}
	// DrugAllergiesTable holds the schema information for the "drug_allergies" table.
	DrugAllergiesTable = &schema.Table{
		Name:       "drug_allergies",
		Columns:    DrugAllergiesColumns,
		PrimaryKey: []*schema.Column{DrugAllergiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "drug_allergies_doctors_Doctor_DrugAllergy",
				Columns: []*schema.Column{DrugAllergiesColumns[1]},

				RefColumns: []*schema.Column{DoctorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "drug_allergies_manners_Manner_DrugAllergy",
				Columns: []*schema.Column{DrugAllergiesColumns[2]},

				RefColumns: []*schema.Column{MannersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "drug_allergies_medicines_Medicine_DrugAllergy",
				Columns: []*schema.Column{DrugAllergiesColumns[3]},

				RefColumns: []*schema.Column{MedicinesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "drug_allergies_patients_Patient_DrugAllergy",
				Columns: []*schema.Column{DrugAllergiesColumns[4]},

				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MannersColumns holds the columns for the "manners" table.
	MannersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "manner_name", Type: field.TypeString},
	}
	// MannersTable holds the schema information for the "manners" table.
	MannersTable = &schema.Table{
		Name:        "manners",
		Columns:     MannersColumns,
		PrimaryKey:  []*schema.Column{MannersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MedicinesColumns holds the columns for the "medicines" table.
	MedicinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "medicine_name", Type: field.TypeString},
	}
	// MedicinesTable holds the schema information for the "medicines" table.
	MedicinesTable = &schema.Table{
		Name:        "medicines",
		Columns:     MedicinesColumns,
		PrimaryKey:  []*schema.Column{MedicinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "patient_name", Type: field.TypeString},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:        "patients",
		Columns:     PatientsColumns,
		PrimaryKey:  []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DoctorsTable,
		DrugAllergiesTable,
		MannersTable,
		MedicinesTable,
		PatientsTable,
	}
)

func init() {
	DrugAllergiesTable.ForeignKeys[0].RefTable = DoctorsTable
	DrugAllergiesTable.ForeignKeys[1].RefTable = MannersTable
	DrugAllergiesTable.ForeignKeys[2].RefTable = MedicinesTable
	DrugAllergiesTable.ForeignKeys[3].RefTable = PatientsTable
}
