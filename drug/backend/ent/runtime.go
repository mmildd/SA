// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/mmildd_s/app/ent/doctor"
	"github.com/mmildd_s/app/ent/manner"
	"github.com/mmildd_s/app/ent/medicine"
	"github.com/mmildd_s/app/ent/patient"
	"github.com/mmildd_s/app/ent/schema"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	doctorFields := schema.Doctor{}.Fields()
	_ = doctorFields
	// doctorDescDoctorEmail is the schema descriptor for Doctor_Email field.
	doctorDescDoctorEmail := doctorFields[0].Descriptor()
	// doctor.DoctorEmailValidator is a validator for the "Doctor_Email" field. It is called by the builders before save.
	doctor.DoctorEmailValidator = doctorDescDoctorEmail.Validators[0].(func(string) error)
	// doctorDescDoctorPassword is the schema descriptor for Doctor_Password field.
	doctorDescDoctorPassword := doctorFields[1].Descriptor()
	// doctor.DoctorPasswordValidator is a validator for the "Doctor_Password" field. It is called by the builders before save.
	doctor.DoctorPasswordValidator = doctorDescDoctorPassword.Validators[0].(func(string) error)
	// doctorDescDoctorName is the schema descriptor for Doctor_Name field.
	doctorDescDoctorName := doctorFields[2].Descriptor()
	// doctor.DoctorNameValidator is a validator for the "Doctor_Name" field. It is called by the builders before save.
	doctor.DoctorNameValidator = doctorDescDoctorName.Validators[0].(func(string) error)
	// doctorDescDoctorTel is the schema descriptor for Doctor_Tel field.
	doctorDescDoctorTel := doctorFields[3].Descriptor()
	// doctor.DoctorTelValidator is a validator for the "Doctor_Tel" field. It is called by the builders before save.
	doctor.DoctorTelValidator = doctorDescDoctorTel.Validators[0].(func(string) error)
	mannerFields := schema.Manner{}.Fields()
	_ = mannerFields
	// mannerDescMannerName is the schema descriptor for Manner_Name field.
	mannerDescMannerName := mannerFields[0].Descriptor()
	// manner.MannerNameValidator is a validator for the "Manner_Name" field. It is called by the builders before save.
	manner.MannerNameValidator = mannerDescMannerName.Validators[0].(func(string) error)
	medicineFields := schema.Medicine{}.Fields()
	_ = medicineFields
	// medicineDescMedicineName is the schema descriptor for Medicine_Name field.
	medicineDescMedicineName := medicineFields[0].Descriptor()
	// medicine.MedicineNameValidator is a validator for the "Medicine_Name" field. It is called by the builders before save.
	medicine.MedicineNameValidator = medicineDescMedicineName.Validators[0].(func(string) error)
	patientFields := schema.Patient{}.Fields()
	_ = patientFields
	// patientDescPatientName is the schema descriptor for Patient_Name field.
	patientDescPatientName := patientFields[0].Descriptor()
	// patient.PatientNameValidator is a validator for the "Patient_Name" field. It is called by the builders before save.
	patient.PatientNameValidator = patientDescPatientName.Validators[0].(func(string) error)
}
