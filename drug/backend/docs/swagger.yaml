basePath: /api/v1
definitions:
  controllers.DrugAllergy:
    properties:
      doctor:
        type: integer
      manner:
        type: integer
      medicine:
        type: integer
      patient:
        type: integer
    type: object
  ent.Doctor:
    properties:
      Doctor_Email:
        description: DoctorEmail holds the value of the "Doctor_Email" field.
        type: string
      Doctor_Name:
        description: DoctorName holds the value of the "Doctor_Name" field.
        type: string
      Doctor_Password:
        description: DoctorPassword holds the value of the "Doctor_Password" field.
        type: string
      Doctor_Tel:
        description: DoctorTel holds the value of the "Doctor_Tel" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DoctorEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DoctorQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DoctorEdges:
    properties:
      doctorDrugAllergy:
        description: DoctorDrugAllergy holds the value of the Doctor_DrugAllergy edge.
        items:
          $ref: '#/definitions/ent.DrugAllergy'
        type: array
    type: object
  ent.DrugAllergy:
    properties:
      edges:
        $ref: '#/definitions/ent.DrugAllergyEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DrugAllergyQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DrugAllergyEdges:
    properties:
      doctor:
        $ref: '#/definitions/ent.Doctor'
        description: Doctor holds the value of the doctor edge.
        type: object
      manner:
        $ref: '#/definitions/ent.Manner'
        description: Manner holds the value of the manner edge.
        type: object
      medicine:
        $ref: '#/definitions/ent.Medicine'
        description: Medicine holds the value of the medicine edge.
        type: object
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the patient edge.
        type: object
    type: object
  ent.Manner:
    properties:
      Manner_Name:
        description: MannerName holds the value of the "Manner_Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.MannerEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MannerQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.MannerEdges:
    properties:
      mannerDrugAllergy:
        description: MannerDrugAllergy holds the value of the Manner_DrugAllergy edge.
        items:
          $ref: '#/definitions/ent.DrugAllergy'
        type: array
    type: object
  ent.Medicine:
    properties:
      Medicine_Name:
        description: MedicineName holds the value of the "Medicine_Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.MedicineEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MedicineQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.MedicineEdges:
    properties:
      medicineDrugAllergy:
        description: MedicineDrugAllergy holds the value of the Medicine_DrugAllergy edge.
        items:
          $ref: '#/definitions/ent.DrugAllergy'
        type: array
    type: object
  ent.Patient:
    properties:
      Patient_Name:
        description: PatientName holds the value of the "Patient_Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PatientEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PatientQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PatientEdges:
    properties:
      patientDrugAllergy:
        description: PatientDrugAllergy holds the value of the Patient_DrugAllergy edge.
        items:
          $ref: '#/definitions/ent.DrugAllergy'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API Playlist Vidoe
  version: "1.0"
paths:
  /doctors:
    get:
      description: list doctor entities
      operationId: list-doctor
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Doctor'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List doctor entities
    post:
      consumes:
      - application/json
      description: Create doctor
      operationId: create-doctor
      parameters:
      - description: Doctor entity
        in: body
        name: doctor
        required: true
        schema:
          $ref: '#/definitions/ent.Doctor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Doctor'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create doctor
  /doctors/{id}:
    delete:
      description: get doctor by ID
      operationId: delete-doctor
      parameters:
      - description: Doctor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a doctor entity by ID
    get:
      description: get doctor by ID
      operationId: get-doctor
      parameters:
      - description: Doctor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Doctor'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a doctor entity by ID
    put:
      consumes:
      - application/json
      description: update doctor by ID
      operationId: update-doctor
      parameters:
      - description: Doctor ID
        in: path
        name: id
        required: true
        type: integer
      - description: Doctor entity
        in: body
        name: doctor
        required: true
        schema:
          $ref: '#/definitions/ent.Doctor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Doctor'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a doctor entity by ID
  /drugAllergys:
    get:
      description: list drugAllergy entities
      operationId: list-drugAllergy
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.DrugAllergy'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List drugAllergy entities
    post:
      consumes:
      - application/json
      description: Create drugAllergy
      operationId: create-drugAllergy
      parameters:
      - description: DrugAllergy entity
        in: body
        name: drugallergy
        required: true
        schema:
          $ref: '#/definitions/controllers.DrugAllergy'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.DrugAllergy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create drugAllergy
  /drugAllergys/{id}:
    delete:
      description: get drugAllergy by ID
      operationId: delete-drugAllergy
      parameters:
      - description: DrugAllergy ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a drugAllergy entity by ID
    get:
      description: get drugAllergy by ID
      operationId: get-drugAllergy
      parameters:
      - description: DrugAllergy ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.DrugAllergy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a drugAllergy entity by ID
    put:
      consumes:
      - application/json
      description: update drugAllergy by ID
      operationId: update-drugAllergy
      parameters:
      - description: DrugAllergy ID
        in: path
        name: id
        required: true
        type: integer
      - description: DrugAllergy entity
        in: body
        name: drugAllergy
        required: true
        schema:
          $ref: '#/definitions/ent.DrugAllergy'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.DrugAllergy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a drugAllergy entity by ID
  /manners:
    get:
      description: list manner entities
      operationId: list-manner
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Manner'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List manner entities
    post:
      consumes:
      - application/json
      description: Create manner
      operationId: create-manner
      parameters:
      - description: Manner entity
        in: body
        name: manner
        required: true
        schema:
          $ref: '#/definitions/ent.Manner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Manner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create manner
  /manners/{id}:
    delete:
      description: get manner by ID
      operationId: delete-manner
      parameters:
      - description: Manner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a manner entity by ID
    get:
      description: get manner by ID
      operationId: get-manner
      parameters:
      - description: Manner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Manner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a manner entity by ID
    put:
      consumes:
      - application/json
      description: update manner by ID
      operationId: update-manner
      parameters:
      - description: Manner ID
        in: path
        name: id
        required: true
        type: integer
      - description: Manner entity
        in: body
        name: manner
        required: true
        schema:
          $ref: '#/definitions/ent.Manner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Manner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a manner entity by ID
  /medicines:
    get:
      description: list medicine entities
      operationId: list-medicine
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Medicine'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List medicine entities
    post:
      consumes:
      - application/json
      description: Create medicine
      operationId: create-medicine
      parameters:
      - description: Medicine entity
        in: body
        name: medicine
        required: true
        schema:
          $ref: '#/definitions/ent.Medicine'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Medicine'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create medicine
  /medicines/{id}:
    delete:
      description: get medicine by ID
      operationId: delete-medicine
      parameters:
      - description: Medicine ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a medicine entity by ID
    get:
      description: get medicine by ID
      operationId: get-medicine
      parameters:
      - description: Medicine ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Medicine'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a medicine entity by ID
    put:
      consumes:
      - application/json
      description: update medicine by ID
      operationId: update-medicine
      parameters:
      - description: Medicine ID
        in: path
        name: id
        required: true
        type: integer
      - description: Medicine entity
        in: body
        name: medicine
        required: true
        schema:
          $ref: '#/definitions/ent.Medicine'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Medicine'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a medicine entity by ID
  /patients:
    get:
      description: list patient entities
      operationId: list-patient
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Patient'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List patient entities
    post:
      consumes:
      - application/json
      description: Create patient
      operationId: create-patient
      parameters:
      - description: Patient entity
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/ent.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create patient
  /patients/{id}:
    delete:
      description: get patient by ID
      operationId: delete-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a patient entity by ID
    get:
      description: get patient by ID
      operationId: get-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a patient entity by ID
    put:
      consumes:
      - application/json
      description: update patient by ID
      operationId: update-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      - description: Patient entity
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/ent.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a patient entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
